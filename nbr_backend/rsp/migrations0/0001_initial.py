# Generated by Django 3.0.3 on 2020-07-21 14:10

import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='name', error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('password', models.CharField(db_column='pass', max_length=128, verbose_name='password')),
                ('mail', models.CharField(blank=True, max_length=64, null=True)),
                ('signature', models.CharField(max_length=255)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(db_column='status', default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Access',
            fields=[
                ('aid', models.AutoField(primary_key=True, serialize=False)),
                ('mask', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accesslog',
            fields=[
                ('aid', models.AutoField(primary_key=True, serialize=False)),
                ('sid', models.CharField(max_length=64)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('hostname', models.CharField(blank=True, max_length=128, null=True)),
                ('uid', models.PositiveIntegerField(blank=True, null=True)),
                ('timer', models.PositiveIntegerField()),
                ('timestamp', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'accesslog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Actions',
            fields=[
                ('aid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=32)),
                ('callback', models.CharField(max_length=255)),
                ('parameters', models.TextField()),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActionsAid',
            fields=[
                ('aid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'actions_aid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdvancedHelpIndex',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('module', models.CharField(max_length=255)),
                ('topic', models.CharField(max_length=255)),
                ('language', models.CharField(max_length=12)),
            ],
            options={
                'db_table': 'advanced_help_index',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AntispamCounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('provider', models.IntegerField()),
                ('spam_detected', models.IntegerField(blank=True, null=True)),
                ('ham_detected', models.IntegerField(blank=True, null=True)),
                ('false_negative', models.IntegerField(blank=True, null=True)),
                ('false_positive', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'antispam_counter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AntispamModerator',
            fields=[
                ('uid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('email_for', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'antispam_moderator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AntispamSpamMarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(max_length=20)),
                ('content_id', models.PositiveIntegerField()),
                ('spam_created', models.PositiveIntegerField()),
                ('hostname', models.CharField(max_length=128)),
                ('mail', models.CharField(max_length=128)),
                ('signature', models.CharField(blank=True, max_length=40, null=True)),
                ('spaminess', models.FloatField(blank=True, null=True)),
                ('judge', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'antispam_spam_marks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Authmap',
            fields=[
                ('aid', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField()),
                ('authname', models.CharField(max_length=128, unique=True)),
                ('module', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'authmap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorTaxonomyTermLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tid', models.PositiveIntegerField()),
                ('uid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'author_taxonomy_term_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BackreferenceFieldSymmetry',
            fields=[
                ('field_left', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('field_right', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'db_table': 'backreference_field_symmetry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('bid', models.AutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=64)),
                ('timestamp', models.IntegerField()),
                ('batch', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Biblio',
            fields=[
                ('nid', models.IntegerField()),
                ('vid', models.IntegerField(primary_key=True, serialize=False)),
                ('biblio_type', models.IntegerField()),
                ('biblio_number', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_other_number', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_secondary_title', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_tertiary_title', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_edition', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_place_published', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_year', models.IntegerField()),
                ('biblio_volume', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_pages', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_date', models.CharField(blank=True, max_length=16, null=True)),
                ('biblio_isbn', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_lang', models.CharField(blank=True, max_length=24, null=True)),
                ('biblio_abst_e', models.TextField(blank=True, null=True)),
                ('biblio_abst_f', models.TextField(blank=True, null=True)),
                ('biblio_full_text', models.IntegerField(blank=True, null=True)),
                ('biblio_url', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_issue', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_type_of_work', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_accession_number', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_call_number', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_notes', models.TextField(blank=True, null=True)),
                ('biblio_custom1', models.TextField(blank=True, null=True)),
                ('biblio_custom2', models.TextField(blank=True, null=True)),
                ('biblio_custom3', models.TextField(blank=True, null=True)),
                ('biblio_custom4', models.TextField(blank=True, null=True)),
                ('biblio_custom5', models.TextField(blank=True, null=True)),
                ('biblio_custom6', models.TextField(blank=True, null=True)),
                ('biblio_custom7', models.TextField(blank=True, null=True)),
                ('biblio_research_notes', models.TextField(blank=True, null=True)),
                ('biblio_number_of_volumes', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_short_title', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_alternate_title', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_original_publication', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_reprint_edition', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_translated_title', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_section', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_citekey', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_coins', models.TextField(blank=True, null=True)),
                ('biblio_doi', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_issn', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_auth_address', models.TextField(blank=True, null=True)),
                ('biblio_remote_db_name', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_remote_db_provider', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_label', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_access_date', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_refereed', models.CharField(blank=True, max_length=20, null=True)),
                ('biblio_md5', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'biblio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioAbbrev',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbrev', models.CharField(max_length=128)),
                ('full', models.TextField()),
            ],
            options={
                'db_table': 'biblio_abbrev',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioCollection',
            fields=[
                ('cid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('vid', models.PositiveIntegerField()),
                ('pid', models.PositiveIntegerField()),
                ('nid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'biblio_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioCollectionType',
            fields=[
                ('cid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'biblio_collection_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioContributor',
            fields=[
                ('nid', models.PositiveIntegerField()),
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('cid', models.PositiveIntegerField()),
                ('auth_type', models.PositiveIntegerField()),
                ('auth_category', models.PositiveIntegerField()),
                ('rank', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'biblio_contributor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioContributorData',
            fields=[
                ('cid', models.AutoField(primary_key=True, serialize=False)),
                ('aka', models.PositiveIntegerField()),
                ('drupal_uid', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('lastname', models.CharField(max_length=255)),
                ('firstname', models.CharField(blank=True, max_length=128, null=True)),
                ('prefix', models.CharField(blank=True, max_length=128, null=True)),
                ('suffix', models.CharField(blank=True, max_length=128, null=True)),
                ('initials', models.CharField(blank=True, max_length=10, null=True)),
                ('affiliation', models.CharField(blank=True, max_length=255, null=True)),
                ('md5', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'biblio_contributor_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioContributorType',
            fields=[
                ('auth_category', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('biblio_type', models.PositiveIntegerField()),
                ('auth_type', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'biblio_contributor_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioContributorTypeData',
            fields=[
                ('auth_type', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128)),
                ('hint', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'biblio_contributor_type_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioCrawlerCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biblio_type', models.IntegerField()),
                ('biblio_number', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_other_number', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_secondary_title', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_tertiary_title', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_edition', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_place_published', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_year', models.IntegerField()),
                ('biblio_volume', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_pages', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_date', models.CharField(blank=True, max_length=16, null=True)),
                ('biblio_isbn', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_lang', models.CharField(blank=True, max_length=24, null=True)),
                ('biblio_abst_e', models.TextField(blank=True, null=True)),
                ('biblio_abst_f', models.TextField(blank=True, null=True)),
                ('biblio_full_text', models.IntegerField(blank=True, null=True)),
                ('biblio_url', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_issue', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_type_of_work', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_accession_number', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_call_number', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_notes', models.TextField(blank=True, null=True)),
                ('biblio_custom1', models.TextField(blank=True, null=True)),
                ('biblio_custom2', models.TextField(blank=True, null=True)),
                ('biblio_custom3', models.TextField(blank=True, null=True)),
                ('biblio_custom4', models.TextField(blank=True, null=True)),
                ('biblio_custom5', models.TextField(blank=True, null=True)),
                ('biblio_custom6', models.TextField(blank=True, null=True)),
                ('biblio_custom7', models.TextField(blank=True, null=True)),
                ('biblio_research_notes', models.TextField(blank=True, null=True)),
                ('biblio_number_of_volumes', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_short_title', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_alternate_title', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_original_publication', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_reprint_edition', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_translated_title', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_section', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_citekey', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_coins', models.TextField(blank=True, null=True)),
                ('biblio_doi', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_issn', models.CharField(blank=True, max_length=128, null=True)),
                ('biblio_auth_address', models.TextField(blank=True, null=True)),
                ('biblio_remote_db_name', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_remote_db_provider', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_label', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_access_date', models.CharField(blank=True, max_length=255, null=True)),
                ('biblio_refereed', models.CharField(blank=True, max_length=20, null=True)),
                ('biblio_md5', models.CharField(blank=True, max_length=32, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('biblio_contributors', models.TextField(blank=True, null=True)),
                ('title', models.TextField()),
                ('nid', models.IntegerField(blank=True, null=True)),
                ('crawler_view_url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'biblio_crawler_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioCrawlerCacheFetch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crawler_cache_id', models.IntegerField()),
                ('crawler_fetch_id', models.IntegerField()),
            ],
            options={
                'db_table': 'biblio_crawler_cache_fetch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioCrawlerFetch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crawler_search_id', models.IntegerField()),
                ('time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'biblio_crawler_fetch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioCrawlerSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drupal_uid', models.PositiveIntegerField(blank=True, null=True)),
                ('match_terms', models.TextField(blank=True, null=True)),
                ('exclude_terms', models.TextField(blank=True, null=True)),
                ('min_year', models.IntegerField(blank=True, null=True)),
                ('max_year', models.IntegerField(blank=True, null=True)),
                ('nrec', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'biblio_crawler_search',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioCrawlerSearchSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crawler_search_id', models.IntegerField(blank=True, null=True)),
                ('crawler_source_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'biblio_crawler_search_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioCrawlerSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('short_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'biblio_crawler_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioDuplicates',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('did', models.PositiveIntegerField()),
                ('type', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'biblio_duplicates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioFields',
            fields=[
                ('fid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('type', models.CharField(max_length=128)),
                ('size', models.PositiveIntegerField()),
                ('maxsize', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'biblio_fields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioFieldType',
            fields=[
                ('tid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('fid', models.PositiveIntegerField()),
                ('ftdid', models.PositiveIntegerField()),
                ('cust_tdid', models.PositiveIntegerField()),
                ('common', models.PositiveIntegerField()),
                ('autocomplete', models.PositiveIntegerField()),
                ('required', models.PositiveIntegerField()),
                ('weight', models.IntegerField()),
                ('visible', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'biblio_field_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioFieldTypeData',
            fields=[
                ('ftdid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128)),
                ('hint', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'biblio_field_type_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioImportCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=45)),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'biblio_import_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioKeyword',
            fields=[
                ('kid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('vid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'biblio_keyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioKeywordData',
            fields=[
                ('kid', models.AutoField(primary_key=True, serialize=False)),
                ('word', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'biblio_keyword_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioPubmed',
            fields=[
                ('biblio_pubmed_id', models.IntegerField()),
                ('nid', models.IntegerField(primary_key=True, serialize=False)),
                ('biblio_pubmed_md5', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'biblio_pubmed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioTypeMaps',
            fields=[
                ('format', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('type_map', models.TextField(blank=True, null=True)),
                ('type_names', models.TextField(blank=True, null=True)),
                ('field_map', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'biblio_type_maps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiblioTypes',
            fields=[
                ('tid', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('weight', models.IntegerField()),
                ('visible', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'biblio_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Blocks',
            fields=[
                ('bid', models.AutoField(primary_key=True, serialize=False)),
                ('module', models.CharField(max_length=64)),
                ('delta', models.CharField(max_length=32)),
                ('theme', models.CharField(max_length=64)),
                ('status', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('region', models.CharField(max_length=64)),
                ('custom', models.IntegerField()),
                ('throttle', models.IntegerField()),
                ('visibility', models.IntegerField()),
                ('pages', models.TextField()),
                ('title', models.CharField(max_length=64)),
                ('cache', models.IntegerField()),
            ],
            options={
                'db_table': 'blocks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlocksRoles',
            fields=[
                ('module', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('delta', models.CharField(max_length=32)),
                ('rid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'blocks_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('mlid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField(unique=True)),
                ('bid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'book',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Boxes',
            fields=[
                ('bid', models.AutoField(primary_key=True, serialize=False)),
                ('body', models.TextField(blank=True, null=True)),
                ('info', models.CharField(max_length=128, unique=True)),
                ('format', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'boxes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cache',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheBlock',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_block',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheContent',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheFilter',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_filter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheForm',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_form',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheMenu',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheMydropwizard',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_mydropwizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CachePage',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_page',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CachePanels',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_panels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheUpdate',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_update',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheViews',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_views',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheViewsData',
            fields=[
                ('cid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('data', models.TextField(blank=True, null=True)),
                ('expire', models.IntegerField()),
                ('created', models.IntegerField()),
                ('headers', models.TextField(blank=True, null=True)),
                ('serialized', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'cache_views_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CkeditorRole',
            fields=[
                ('name', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('rid', models.IntegerField()),
            ],
            options={
                'db_table': 'ckeditor_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CkeditorSettings',
            fields=[
                ('name', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('settings', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ckeditor_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('cid', models.AutoField(primary_key=True, serialize=False)),
                ('pid', models.IntegerField()),
                ('nid', models.IntegerField()),
                ('uid', models.IntegerField()),
                ('subject', models.CharField(max_length=64)),
                ('comment', models.TextField()),
                ('hostname', models.CharField(max_length=128)),
                ('timestamp', models.IntegerField()),
                ('status', models.PositiveIntegerField()),
                ('format', models.SmallIntegerField()),
                ('thread', models.CharField(max_length=255)),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('mail', models.CharField(blank=True, max_length=64, null=True)),
                ('homepage', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommunityTags',
            fields=[
                ('tid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('uid', models.PositiveIntegerField()),
                ('date', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'community_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('cid', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=255, unique=True)),
                ('recipients', models.TextField()),
                ('reply', models.TextField()),
                ('weight', models.IntegerField()),
                ('selected', models.IntegerField()),
                ('page_info', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCenter',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_center_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_center',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCenterMember',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_center_member_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_center_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCommittee',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_committee_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_committee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCommitteeEditors',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_committee_editors_uid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_committee_editors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCommitteeMember',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_committee_member_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_committee_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCoreDept',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_core_dept_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_core_dept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCoreDirectorNode',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_core_director_node_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_core_director_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCoreEditor',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_core_editor_uid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_core_editor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCoreLab',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_core_lab_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_core_lab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCorelabEditor',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_corelab_editor_uid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_corelab_editor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCoreLabMember',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_core_lab_member_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_core_lab_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCorelabProjects',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_corelab_projects_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_corelab_projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCoreProjects',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_core_projects_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_core_projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldCoreStaff',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_core_staff_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_core_staff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldDepartment',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_department_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldDeptCores',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_dept_cores_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_dept_cores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldDeptDirectors',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_dept_directors_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_dept_directors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldDeptEditor',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_dept_editor_uid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_dept_editor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldDeptProjects',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_dept_projects_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_dept_projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldEditors',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_editors_uid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_editors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldEduCity',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_edu_city_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_edu_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldEduCountry',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_edu_country_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_edu_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldEduDegree',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_edu_degree_value', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'content_field_edu_degree',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldEduField',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_edu_field_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_edu_field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldEduInstitution',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_edu_institution_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_edu_institution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldEduMonth',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_edu_month_value', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'content_field_edu_month',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldEduState',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_edu_state_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_edu_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldEduYear',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_edu_year_value', models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                'db_table': 'content_field_edu_year',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldGrantCoPiNode',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_grant_co_pi_node_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_grant_co_pi_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldGrantKeyNode',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_grant_key_node_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_grant_key_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldGrantNode',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_grant_node_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_grant_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldGrantPiNode',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_grant_pi_node_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_grant_pi_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldGrantProjects',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_grant_projects_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_grant_projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldGrantRole',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_grant_role_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_grant_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldInternalOnly',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('field_internal_only_value', models.TextField(blank=True, null=True)),
                ('field_internal_only_format', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_internal_only',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldLabHeadNode',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_lab_head_node_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_lab_head_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldMembersCommittee',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_members_committee_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_members_committee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldOffice',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_office_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_office',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldOfficeMember',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_office_member_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_office_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProfileCores',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_profile_cores_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_profile_cores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProfileEditor',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_profile_editor_uid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_profile_editor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjDesc',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_proj_desc_value', models.TextField(blank=True, null=True)),
                ('field_proj_desc_format', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_proj_desc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjectCoinvestNode',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_project_coinvest_node_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_project_coinvest_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjectCore',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_project_core_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_project_core',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjectCoreLab',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_project_core_lab_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_project_core_lab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjectDept',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_project_dept_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_project_dept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjectEditor',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_project_editor_uid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_project_editor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjectGrant',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_project_grant_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_project_grant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjectRaNode',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_project_ra_node_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_project_ra_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjectStudycoordNode',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_project_studycoord_node_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_project_studycoord_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjPi',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_proj_pi_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_proj_pi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjRole',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_proj_role_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_proj_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldProjTitle',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_proj_title_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_proj_title',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldResearchAreas',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_research_areas_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_research_areas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldStaffCoreLab',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_staff_core_lab_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_staff_core_lab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldStaffNode',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_staff_node_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_staff_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentFieldStaffOffice',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('delta', models.PositiveIntegerField()),
                ('field_staff_office_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_field_staff_office',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentGroup',
            fields=[
                ('group_type', models.CharField(max_length=32)),
                ('type_name', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=32)),
                ('label', models.CharField(max_length=255)),
                ('settings', models.TextField()),
                ('weight', models.IntegerField()),
                ('parent', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'content_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentGroupFields',
            fields=[
                ('type_name', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=32)),
                ('field_name', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'content_group_fields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentNodeField',
            fields=[
                ('field_name', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=127)),
                ('global_settings', models.TextField()),
                ('required', models.IntegerField()),
                ('multiple', models.IntegerField()),
                ('db_storage', models.IntegerField()),
                ('module', models.CharField(max_length=127)),
                ('db_columns', models.TextField()),
                ('active', models.IntegerField()),
                ('locked', models.IntegerField()),
            ],
            options={
                'db_table': 'content_node_field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentNodeFieldInstance',
            fields=[
                ('field_name', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=32)),
                ('weight', models.IntegerField()),
                ('label', models.CharField(max_length=255)),
                ('widget_type', models.CharField(max_length=32)),
                ('widget_settings', models.TextField()),
                ('display_settings', models.TextField()),
                ('description', models.TextField()),
                ('widget_module', models.CharField(max_length=127)),
                ('widget_active', models.IntegerField()),
            ],
            options={
                'db_table': 'content_node_field_instance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeCenter',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'content_type_center',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeCenterSub',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('field_master_dept_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_type_center_sub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeCommiteesSub',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('field_master_committee_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_type_commitees_sub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeCommittee',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'content_type_committee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeCore',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'content_type_core',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeCoreSub',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('field_master_core_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_type_core_sub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeGrant',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('field_grant_number_value', models.TextField(blank=True, null=True)),
                ('field_grant_agency_value', models.TextField(blank=True, null=True)),
                ('field_brief_summary_value', models.TextField(blank=True, null=True)),
                ('field_grant_abstract_value', models.TextField(blank=True, null=True)),
                ('field_brief_summary_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_grant_abstract_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_grant_funding_value', models.TextField(blank=True, null=True)),
                ('field_grant_start_value', models.TextField(blank=True, null=True)),
                ('field_grant_end_value', models.TextField(blank=True, null=True)),
                ('field_grant_award_value', models.IntegerField(blank=True, null=True)),
                ('field_grant_funding_other_value', models.TextField(blank=True, null=True)),
                ('field_grant_status_value', models.TextField(blank=True, null=True)),
                ('field_grant_pi_other_value', models.TextField(blank=True, null=True)),
                ('field_grant_pi_other_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_grant_co_pi_other_value', models.TextField(blank=True, null=True)),
                ('field_grant_co_pi_other_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_grant_key_more_value', models.TextField(blank=True, null=True)),
                ('field_grant_key_more_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_grant_title_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_type_grant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeLab',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'content_type_lab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeLabSub',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('field_master_corelab_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_type_lab_sub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeOffice',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('field_unit_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_type_office',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeOfficesub',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('field_officemaster_nid', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_type_officesub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypePage',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'content_type_page',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeProfile',
            fields=[
                ('vid', models.IntegerField(primary_key=True, serialize=False)),
                ('nid', models.IntegerField()),
                ('field_phone_value', models.CharField(blank=True, max_length=14, null=True)),
                ('field_first_name_value', models.CharField(blank=True, max_length=20, null=True)),
                ('field_last_name_value', models.CharField(blank=True, max_length=30, null=True)),
                ('field_title_value', models.TextField(blank=True, null=True)),
                ('field_education_value', models.TextField(blank=True, null=True)),
                ('field_research_value', models.TextField(blank=True, null=True)),
                ('field_prior_research_value', models.TextField(blank=True, null=True)),
                ('field_era_commons_name_value', models.TextField(blank=True, null=True)),
                ('field_era_commons_name_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_prior_research_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_research_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_education_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_personal_statement_value', models.TextField(blank=True, null=True)),
                ('field_employment_value', models.TextField(blank=True, null=True)),
                ('field_memberships_value', models.TextField(blank=True, null=True)),
                ('field_activities_value', models.TextField(blank=True, null=True)),
                ('field_positions_misc_value', models.TextField(blank=True, null=True)),
                ('field_publications_misc_value', models.TextField(blank=True, null=True)),
                ('field_research_misc_value', models.TextField(blank=True, null=True)),
                ('field_biosketch_name_value', models.TextField(blank=True, null=True)),
                ('field_employment_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_activities_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_positions_misc_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_publications_misc_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_research_misc_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_personal_statement_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_middle_name_value', models.CharField(blank=True, max_length=20, null=True)),
                ('field_nickname_value', models.CharField(blank=True, max_length=20, null=True)),
                ('field_degree_value', models.TextField(blank=True, null=True)),
                ('field_phone_alt_value', models.CharField(blank=True, max_length=14, null=True)),
                ('field_fax_value', models.CharField(blank=True, max_length=14, null=True)),
                ('field_pager_value', models.CharField(blank=True, max_length=14, null=True)),
                ('field_phone_cell_value', models.CharField(blank=True, max_length=14, null=True)),
                ('field_email_alt_value', models.TextField(blank=True, null=True)),
                ('field_site_value', models.TextField(blank=True, null=True)),
                ('field_building_value', models.TextField(blank=True, null=True)),
                ('field_room_value', models.TextField(blank=True, null=True)),
                ('field_memberships_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_biosketch_title_value', models.TextField(blank=True, null=True)),
                ('field_biosketch_title_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_bio_value', models.TextField(blank=True, null=True)),
                ('field_suffix_value', models.TextField(blank=True, null=True)),
                ('field_npi_value', models.CharField(blank=True, max_length=10, null=True)),
                ('field_nemours_directory_value', models.TextField(blank=True, null=True)),
                ('field_profile_biosketch_fid', models.IntegerField(blank=True, null=True)),
                ('field_profile_biosketch_list', models.IntegerField(blank=True, null=True)),
                ('field_profile_biosketch_data', models.TextField(blank=True, null=True)),
                ('field_profile_cv_fid', models.IntegerField(blank=True, null=True)),
                ('field_profile_cv_list', models.IntegerField(blank=True, null=True)),
                ('field_profile_cv_data', models.TextField(blank=True, null=True)),
                ('field_primary_title_value', models.CharField(blank=True, max_length=80, null=True)),
                ('field_title_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_public_email_value', models.TextField(blank=True, null=True)),
                ('field_orcid_id_value', models.TextField(blank=True, null=True)),
                ('field_cpr_title_value', models.CharField(blank=True, max_length=60, null=True)),
                ('field_lawson_id_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_type_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTypeProject',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('nid', models.PositiveIntegerField()),
                ('field_project_staff_value', models.TextField(blank=True, null=True)),
                ('field_project_staff_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_project_descr_value', models.TextField(blank=True, null=True)),
                ('field_project_descr_format', models.PositiveIntegerField(blank=True, null=True)),
                ('field_other_funding_value', models.TextField(blank=True, null=True)),
                ('field_project_pi_node_nid', models.PositiveIntegerField(blank=True, null=True)),
                ('field_project_coinvest_other_value', models.TextField(blank=True, null=True)),
                ('field_project_studycoord_other_value', models.TextField(blank=True, null=True)),
                ('field_project_ra_other_value', models.TextField(blank=True, null=True)),
                ('field_project_coinvest_other_format', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'content_type_project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtoolsCssCache',
            fields=[
                ('cid', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('filename', models.CharField(blank=True, max_length=255, null=True)),
                ('css', models.TextField(blank=True, null=True)),
                ('filter', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctools_css_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtoolsObjectCache',
            fields=[
                ('sid', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('obj', models.CharField(max_length=32)),
                ('updated', models.PositiveIntegerField()),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctools_object_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DateFormatLocale',
            fields=[
                ('format', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=12)),
            ],
            options={
                'db_table': 'date_format_locale',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DateFormats',
            fields=[
                ('dfid', models.AutoField(primary_key=True, serialize=False)),
                ('format', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=200)),
                ('locked', models.IntegerField()),
            ],
            options={
                'db_table': 'date_formats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DateFormatTypes',
            fields=[
                ('type', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('locked', models.IntegerField()),
            ],
            options={
                'db_table': 'date_format_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DevelQueries',
            fields=[
                ('qid', models.AutoField(primary_key=True, serialize=False)),
                ('function', models.CharField(max_length=255)),
                ('query', models.TextField()),
                ('hash', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'devel_queries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DevelTimes',
            fields=[
                ('tid', models.AutoField(primary_key=True, serialize=False)),
                ('qid', models.IntegerField()),
                ('time', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devel_times',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('fid', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.PositiveIntegerField()),
                ('filename', models.CharField(max_length=255)),
                ('filepath', models.CharField(max_length=255)),
                ('filemime', models.CharField(max_length=255)),
                ('filesize', models.PositiveIntegerField()),
                ('status', models.IntegerField()),
                ('timestamp', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilterFormats',
            fields=[
                ('format', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('roles', models.CharField(max_length=255)),
                ('cache', models.IntegerField()),
            ],
            options={
                'db_table': 'filter_formats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filters',
            fields=[
                ('fid', models.AutoField(primary_key=True, serialize=False)),
                ('format', models.IntegerField()),
                ('module', models.CharField(max_length=64)),
                ('delta', models.IntegerField()),
                ('weight', models.IntegerField()),
            ],
            options={
                'db_table': 'filters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlagActions',
            fields=[
                ('aid', models.AutoField(primary_key=True, serialize=False)),
                ('fid', models.SmallIntegerField(blank=True, null=True)),
                ('event', models.CharField(blank=True, max_length=255, null=True)),
                ('threshold', models.SmallIntegerField()),
                ('repeat_threshold', models.SmallIntegerField()),
                ('callback', models.CharField(max_length=255)),
                ('parameters', models.TextField()),
            ],
            options={
                'db_table': 'flag_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlagContent',
            fields=[
                ('fcid', models.AutoField(primary_key=True, serialize=False)),
                ('fid', models.PositiveSmallIntegerField()),
                ('content_type', models.CharField(max_length=32)),
                ('content_id', models.PositiveIntegerField()),
                ('uid', models.PositiveIntegerField()),
                ('timestamp', models.PositiveIntegerField()),
                ('sid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'flag_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlagCounts',
            fields=[
                ('fid', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('content_type', models.CharField(max_length=32)),
                ('content_id', models.PositiveIntegerField()),
                ('count', models.PositiveIntegerField()),
                ('last_updated', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'flag_counts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlagListsContent',
            fields=[
                ('fcid', models.AutoField(primary_key=True, serialize=False)),
                ('fid', models.PositiveSmallIntegerField()),
                ('content_type', models.CharField(max_length=32)),
                ('content_id', models.PositiveIntegerField()),
                ('uid', models.PositiveIntegerField()),
                ('sid', models.PositiveIntegerField()),
                ('timestamp', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'flag_lists_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlagListsCounts',
            fields=[
                ('fid', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('content_type', models.CharField(max_length=32)),
                ('content_id', models.PositiveIntegerField()),
                ('count', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'flag_lists_counts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlagListsFlags',
            fields=[
                ('fid', models.SmallAutoField(primary_key=True, serialize=False)),
                ('pfid', models.PositiveSmallIntegerField()),
                ('uid', models.PositiveSmallIntegerField()),
                ('content_type', models.CharField(max_length=32)),
                ('name', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('options', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'flag_lists_flags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlagListsTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('type', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'flag_lists_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Flags',
            fields=[
                ('fid', models.SmallAutoField(primary_key=True, serialize=False)),
                ('content_type', models.CharField(max_length=32)),
                ('name', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('global_field', models.IntegerField(blank=True, db_column='global', null=True)),
                ('options', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'flags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlagTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid', models.PositiveSmallIntegerField()),
                ('type', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'flag_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Flood',
            fields=[
                ('fid', models.AutoField(primary_key=True, serialize=False)),
                ('event', models.CharField(max_length=64)),
                ('hostname', models.CharField(max_length=128)),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'flood',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('uid', models.IntegerField(primary_key=True, serialize=False)),
                ('nid', models.IntegerField()),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HoneypotUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.PositiveIntegerField()),
                ('timestamp', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'honeypot_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImagecacheAction',
            fields=[
                ('actionid', models.AutoField(primary_key=True, serialize=False)),
                ('presetid', models.PositiveIntegerField()),
                ('weight', models.IntegerField()),
                ('module', models.CharField(max_length=255)),
                ('action', models.CharField(max_length=255)),
                ('data', models.TextField()),
            ],
            options={
                'db_table': 'imagecache_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImagecachePreset',
            fields=[
                ('presetid', models.AutoField(primary_key=True, serialize=False)),
                ('presetname', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'imagecache_preset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jquerymenus',
            fields=[
                ('mid', models.AutoField(primary_key=True, serialize=False)),
                ('menu_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'jquerymenus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuCustom',
            fields=[
                ('menu_name', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'menu_custom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuLinks',
            fields=[
                ('menu_name', models.CharField(max_length=32)),
                ('mlid', models.AutoField(primary_key=True, serialize=False)),
                ('plid', models.PositiveIntegerField()),
                ('link_path', models.CharField(max_length=255)),
                ('router_path', models.CharField(max_length=255)),
                ('link_title', models.CharField(max_length=255)),
                ('options', models.TextField(blank=True, null=True)),
                ('module', models.CharField(max_length=255)),
                ('hidden', models.SmallIntegerField()),
                ('external', models.SmallIntegerField()),
                ('has_children', models.SmallIntegerField()),
                ('expanded', models.SmallIntegerField()),
                ('weight', models.IntegerField()),
                ('depth', models.SmallIntegerField()),
                ('customized', models.SmallIntegerField()),
                ('p1', models.PositiveIntegerField()),
                ('p2', models.PositiveIntegerField()),
                ('p3', models.PositiveIntegerField()),
                ('p4', models.PositiveIntegerField()),
                ('p5', models.PositiveIntegerField()),
                ('p6', models.PositiveIntegerField()),
                ('p7', models.PositiveIntegerField()),
                ('p8', models.PositiveIntegerField()),
                ('p9', models.PositiveIntegerField()),
                ('updated', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'menu_links',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuPerRole',
            fields=[
                ('mlid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('rids', models.TextField()),
                ('hrids', models.TextField()),
            ],
            options={
                'db_table': 'menu_per_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuRouter',
            fields=[
                ('path', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('load_functions', models.TextField()),
                ('to_arg_functions', models.TextField()),
                ('access_callback', models.CharField(max_length=255)),
                ('access_arguments', models.TextField(blank=True, null=True)),
                ('page_callback', models.CharField(max_length=255)),
                ('page_arguments', models.TextField(blank=True, null=True)),
                ('fit', models.IntegerField()),
                ('number_parts', models.SmallIntegerField()),
                ('tab_parent', models.CharField(max_length=255)),
                ('tab_root', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('title_callback', models.CharField(max_length=255)),
                ('title_arguments', models.CharField(max_length=255)),
                ('type', models.IntegerField()),
                ('block_callback', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('position', models.CharField(max_length=255)),
                ('weight', models.IntegerField()),
                ('file', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'menu_router',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('vid', models.PositiveIntegerField(unique=True)),
                ('type', models.CharField(max_length=32)),
                ('language', models.CharField(max_length=12)),
                ('title', models.CharField(max_length=255)),
                ('uid', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created', models.IntegerField()),
                ('changed', models.IntegerField()),
                ('comment', models.IntegerField()),
                ('promote', models.IntegerField()),
                ('moderate', models.IntegerField()),
                ('sticky', models.IntegerField()),
                ('tnid', models.PositiveIntegerField()),
                ('translate', models.IntegerField()),
            ],
            options={
                'db_table': 'node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NodeAccess',
            fields=[
                ('nid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('gid', models.PositiveIntegerField()),
                ('realm', models.CharField(max_length=255)),
                ('grant_view', models.PositiveIntegerField()),
                ('grant_update', models.PositiveIntegerField()),
                ('grant_delete', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'node_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NodeCommentStatistics',
            fields=[
                ('nid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('last_comment_timestamp', models.IntegerField()),
                ('last_comment_name', models.CharField(blank=True, max_length=60, null=True)),
                ('last_comment_uid', models.IntegerField()),
                ('comment_count', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'node_comment_statistics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NodeConvertTemplates',
            fields=[
                ('nctid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('source_type', models.TextField(blank=True, null=True)),
                ('destination_type', models.TextField()),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'node_convert_templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NodeCounter',
            fields=[
                ('nid', models.IntegerField(primary_key=True, serialize=False)),
                ('totalcount', models.BigIntegerField()),
                ('daycount', models.PositiveIntegerField()),
                ('timestamp', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'node_counter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NodeImportStatus',
            fields=[
                ('taskid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('file_offset', models.PositiveIntegerField()),
                ('errors', models.TextField()),
                ('objid', models.PositiveIntegerField()),
                ('status', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'node_import_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NodeImportTasks',
            fields=[
                ('taskid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('uid', models.PositiveIntegerField()),
                ('created', models.PositiveIntegerField()),
                ('changed', models.PositiveIntegerField()),
                ('fid', models.PositiveIntegerField()),
                ('has_headers', models.PositiveIntegerField()),
                ('file_options', models.TextField()),
                ('headers', models.TextField()),
                ('type', models.CharField(max_length=64)),
                ('map', models.TextField()),
                ('defaults', models.TextField()),
                ('options', models.TextField()),
                ('file_offset', models.PositiveIntegerField()),
                ('row_done', models.PositiveIntegerField()),
                ('row_error', models.PositiveIntegerField()),
                ('status', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'node_import_tasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NodeRevisions',
            fields=[
                ('nid', models.PositiveIntegerField()),
                ('vid', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('teaser', models.TextField()),
                ('log', models.TextField()),
                ('timestamp', models.IntegerField()),
                ('format', models.IntegerField()),
            ],
            options={
                'db_table': 'node_revisions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NodeType',
            fields=[
                ('type', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('module', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('help', models.TextField()),
                ('has_title', models.PositiveIntegerField()),
                ('title_label', models.CharField(max_length=255)),
                ('has_body', models.PositiveIntegerField()),
                ('body_label', models.CharField(max_length=255)),
                ('min_word_count', models.PositiveSmallIntegerField()),
                ('custom', models.IntegerField()),
                ('modified', models.IntegerField()),
                ('locked', models.IntegerField()),
                ('orig_type', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'node_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PageManagerHandlers',
            fields=[
                ('did', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('task', models.CharField(blank=True, max_length=64, null=True)),
                ('subtask', models.CharField(max_length=64)),
                ('handler', models.CharField(blank=True, max_length=64, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('conf', models.TextField()),
            ],
            options={
                'db_table': 'page_manager_handlers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PageManagerPages',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('task', models.CharField(blank=True, max_length=64, null=True)),
                ('admin_title', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_description', models.TextField(blank=True, null=True)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('access', models.TextField()),
                ('menu', models.TextField()),
                ('arguments', models.TextField()),
                ('conf', models.TextField()),
            ],
            options={
                'db_table': 'page_manager_pages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PageManagerWeights',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('weight', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'page_manager_weights',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PanelsDisplay',
            fields=[
                ('did', models.AutoField(primary_key=True, serialize=False)),
                ('layout', models.CharField(blank=True, max_length=255, null=True)),
                ('layout_settings', models.TextField(blank=True, null=True)),
                ('panel_settings', models.TextField(blank=True, null=True)),
                ('cache', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('hide_title', models.IntegerField(blank=True, null=True)),
                ('title_pane', models.IntegerField(blank=True, null=True)),
                ('storage_type', models.CharField(blank=True, max_length=255, null=True)),
                ('storage_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'panels_display',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PanelsLayout',
            fields=[
                ('lid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_title', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('plugin', models.CharField(blank=True, max_length=255, null=True)),
                ('settings', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'panels_layout',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PanelsMini',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('category', models.CharField(blank=True, max_length=64, null=True)),
                ('did', models.IntegerField(blank=True, null=True)),
                ('admin_title', models.CharField(blank=True, max_length=128, null=True)),
                ('admin_description', models.TextField(blank=True, null=True)),
                ('requiredcontexts', models.TextField(blank=True, null=True)),
                ('contexts', models.TextField(blank=True, null=True)),
                ('relationships', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'panels_mini',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PanelsNode',
            fields=[
                ('nid', models.IntegerField()),
                ('css_id', models.CharField(blank=True, max_length=255, null=True)),
                ('did', models.IntegerField(primary_key=True, serialize=False)),
                ('pipeline', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'panels_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PanelsPane',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('did', models.IntegerField()),
                ('panel', models.CharField(blank=True, max_length=32, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('subtype', models.CharField(blank=True, max_length=64, null=True)),
                ('shown', models.IntegerField(blank=True, null=True)),
                ('access', models.TextField(blank=True, null=True)),
                ('configuration', models.TextField(blank=True, null=True)),
                ('cache', models.TextField(blank=True, null=True)),
                ('style', models.TextField(blank=True, null=True)),
                ('css', models.TextField(blank=True, null=True)),
                ('extras', models.TextField(blank=True, null=True)),
                ('position', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'panels_pane',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PanelsRendererPipeline',
            fields=[
                ('rpid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_title', models.CharField(blank=True, max_length=255, null=True)),
                ('admin_description', models.TextField(blank=True, null=True)),
                ('weight', models.SmallIntegerField(blank=True, null=True)),
                ('settings', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'panels_renderer_pipeline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('rid', models.PositiveIntegerField()),
                ('perm', models.TextField(blank=True, null=True)),
                ('tid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileFields',
            fields=[
                ('fid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('page', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=128, null=True)),
                ('weight', models.IntegerField()),
                ('required', models.IntegerField()),
                ('register', models.IntegerField()),
                ('visibility', models.IntegerField()),
                ('autocomplete', models.IntegerField()),
                ('options', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'profile_fields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileValues',
            fields=[
                ('fid', models.PositiveIntegerField()),
                ('uid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'profile_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Realname',
            fields=[
                ('uid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('realname', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'realname',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('rid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'db_table': 'role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspCategory',
            fields=[
                ('rsp_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('rsrch_category', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'rsp_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspCategoryAffl',
            fields=[
                ('category_affl_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('rsrch_category_id', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_category_affl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspCommitteeStatusMap',
            fields=[
                ('committe_status_map_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_type_id', models.IntegerField()),
                ('current_status_id', models.IntegerField()),
                ('next_status_id', models.IntegerField(blank=True, null=True)),
                ('final_status_flag', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_committee_status_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspCoreAffl',
            fields=[
                ('core_affl_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('core_id', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_core_affl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspCores',
            fields=[
                ('core_id', models.AutoField(primary_key=True, serialize=False)),
                ('core_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'rsp_cores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspDepartment',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('department', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'rsp_department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspDepartmentAffl',
            fields=[
                ('department_affl_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('department_id', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_department_affl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspFundingsource',
            fields=[
                ('fundingsourceid', models.AutoField(db_column='fundingSourceID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('external', models.IntegerField(blank=True, null=True)),
                ('review', models.IntegerField(blank=True, null=True)),
                ('fed', models.IntegerField(blank=True, null=True)),
                ('drug', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=13, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('fax', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'rsp_fundingSource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspFundingsourceAffl',
            fields=[
                ('fundingsource_affl_id', models.AutoField(db_column='fundingSource_affl_id', primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('fundingsourceid', models.IntegerField(db_column='fundingSourceID')),
                ('fund_src_terms', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'rsp_fundingSource_affl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspIntent',
            fields=[
                ('rsp_id', models.AutoField(primary_key=True, serialize=False)),
                ('rsp_proj_num', models.CharField(max_length=16, unique=True)),
                ('rsp_proj_type', models.CharField(max_length=1)),
                ('rsp_proj_pi', models.IntegerField()),
                ('rsp_proj_title', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_intent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspOrg',
            fields=[
                ('org_id', models.AutoField(primary_key=True, serialize=False)),
                ('org_short_name', models.CharField(max_length=10)),
                ('org_long_name', models.CharField(blank=True, max_length=155, null=True)),
                ('org_address1', models.CharField(blank=True, max_length=120, null=True)),
                ('org_address2', models.CharField(blank=True, max_length=120, null=True)),
                ('org_city', models.CharField(blank=True, max_length=120, null=True)),
                ('org_state', models.CharField(blank=True, max_length=50, null=True)),
                ('org_zipcode', models.IntegerField(blank=True, null=True)),
                ('org_type', models.CharField(blank=True, max_length=9, null=True)),
                ('org_active', models.IntegerField(blank=True, null=True)),
                ('org_notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rsp_org',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspOrgAffl',
            fields=[
                ('org_affl_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('org_id', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_org_affl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspProj',
            fields=[
                ('proj_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_identifier', models.CharField(blank=True, max_length=17, null=True)),
                ('proj_revision', models.IntegerField(blank=True, null=True)),
                ('proj_draft', models.BooleanField(blank=True, null=True)),
                ('drupal_uid', models.IntegerField(blank=True, null=True)),
                ('vid', models.IntegerField(blank=True, null=True)),
                ('proj_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('proj_mid_name', models.CharField(blank=True, max_length=255, null=True)),
                ('proj_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('lawson_id', models.CharField(blank=True, max_length=5, null=True)),
                ('proj_pi_email', models.CharField(blank=True, max_length=100, null=True)),
                ('proj_pi_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('proj_pi_fax', models.CharField(blank=True, max_length=20, null=True)),
                ('proj_pi_title', models.CharField(blank=True, max_length=512, null=True)),
                ('proj_pi_dept', models.CharField(blank=True, max_length=255, null=True)),
                ('proj_coinvestigator', models.TextField(blank=True, null=True)),
                ('proj_title', models.CharField(blank=True, max_length=500, null=True)),
                ('proj_abstract', models.TextField(blank=True, null=True)),
                ('proj_lay_desc', models.TextField(blank=True, null=True)),
                ('proj_why_important', models.TextField(blank=True, null=True)),
                ('proj_budget', models.CharField(blank=True, max_length=25, null=True)),
                ('proj_budget_yr1', models.CharField(blank=True, max_length=25, null=True)),
                ('proj_deadline', models.DateField(blank=True, null=True)),
                ('proj_start_date', models.DateField(blank=True, null=True)),
                ('proj_end_date', models.DateField(blank=True, null=True)),
                ('proj_ext_collab', models.IntegerField(blank=True, null=True)),
                ('proj_collab_org', models.TextField(blank=True, null=True)),
                ('proj_cat_other', models.CharField(blank=True, max_length=55, null=True)),
                ('proj_fund_nemours', models.IntegerField(blank=True, null=True)),
                ('proj_fund_ext', models.IntegerField(blank=True, null=True)),
                ('proj_acct_unit', models.CharField(blank=True, max_length=8, null=True)),
                ('proj_act_center', models.CharField(blank=True, max_length=10, null=True)),
                ('proj_grant_id', models.CharField(blank=True, max_length=50, null=True)),
                ('proj_fed', models.IntegerField(blank=True, null=True)),
                ('proj_fed_agency', models.CharField(blank=True, max_length=255, null=True)),
                ('proj_fed_pa', models.CharField(blank=True, max_length=255, null=True)),
                ('proj_fund_nonfed', models.CharField(blank=True, max_length=255, null=True)),
                ('proj_fund_nonfed_term', models.IntegerField(blank=True, null=True)),
                ('proj_human', models.IntegerField(blank=True, null=True)),
                ('proj_adult', models.IntegerField(blank=True, null=True)),
                ('proj_pharm_drug', models.IntegerField(blank=True, null=True)),
                ('proj_wolfson', models.IntegerField(blank=True, null=True)),
                ('proj_ion_rad', models.IntegerField(blank=True, null=True)),
                ('proj_animal', models.IntegerField(blank=True, null=True)),
                ('proj_radioact', models.IntegerField(blank=True, null=True)),
                ('proj_cog', models.IntegerField(blank=True, null=True)),
                ('proj_loc', models.CharField(blank=True, max_length=3, null=True)),
                ('proj_biosafety_id', models.CharField(blank=True, max_length=20, null=True)),
                ('proj_itp_id', models.CharField(blank=True, max_length=20, null=True)),
                ('irbnet_id', models.IntegerField(blank=True, db_column='IRBnet_id', null=True)),
                ('proj_archive', models.IntegerField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('modified_ip', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rsp_proj',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspProjAffl',
            fields=[
                ('affl_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('drupal_uid', models.IntegerField()),
                ('affl_type', models.CharField(max_length=18)),
                ('affl_email', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_proj_affl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspProjComments',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('committee_id', models.IntegerField()),
                ('status_id', models.IntegerField()),
                ('status_map_id', models.IntegerField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.IntegerField()),
                ('posted_date', models.CharField(blank=True, max_length=255, null=True)),
                ('modified_date', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'rsp_proj_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspProjFile',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('media', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('proj_id', models.IntegerField()),
                ('file_cat', models.IntegerField()),
                ('file_committee', models.IntegerField()),
                ('file_name', models.CharField(max_length=55)),
                ('file_label', models.CharField(max_length=100)),
                ('file_tkn', models.CharField(max_length=100)),
                ('drupal_uid', models.IntegerField()),
                ('file_archive', models.IntegerField(blank=True, null=True)),
                ('file_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'rsp_proj_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspProjFileCat',
            fields=[
                ('cat_id', models.AutoField(primary_key=True, serialize=False)),
                ('cat_desc', models.CharField(max_length=55)),
                ('cat_access', models.CharField(max_length=1)),
                ('cat_active', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_proj_file_cat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspProjIdentifier',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('lawson_id', models.CharField(max_length=5)),
                ('year', models.IntegerField()),
                ('sequence', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'rsp_proj_identifier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspProjStatus',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_desc', models.CharField(max_length=55)),
            ],
            options={
                'db_table': 'rsp_proj_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspProjStatusLog',
            fields=[
                ('status_map_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('status_type_id', models.IntegerField()),
                ('status_id', models.IntegerField()),
                ('status_current', models.IntegerField()),
                ('status_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('file_id', models.IntegerField(blank=True, null=True)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
                ('modified_date', models.CharField(blank=True, max_length=255, null=True)),
                ('status_change_date', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'rsp_proj_status_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspProjTask',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('drupal_uid', models.IntegerField()),
                ('task_desc', models.CharField(max_length=55)),
                ('task_status', models.CharField(max_length=55)),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'rsp_proj_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspReportEmailList',
            fields=[
                ('elid', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'rsp_report_email_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspRequireApproval',
            fields=[
                ('req_approval_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('status_type_id', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_require_approval',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspRoles',
            fields=[
                ('rsp_role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=100)),
                ('role_abbrev', models.CharField(max_length=5)),
                ('committee', models.CharField(blank=True, max_length=100, null=True)),
                ('status_type_id', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspStatusType',
            fields=[
                ('status_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_type_name', models.CharField(max_length=100)),
                ('status_display', models.IntegerField()),
                ('status_order', models.IntegerField()),
                ('status_full_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'rsp_status_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspUserProfile',
            fields=[
                ('profile_id', models.IntegerField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField()),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('nemours_directory', models.TextField(blank=True, null=True)),
                ('lawson_id', models.TextField(blank=True, null=True)),
                ('degrees_and_credentials', models.TextField(blank=True, null=True)),
                ('departmental_unit', models.TextField(blank=True, null=True)),
                ('research_areas', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=14, null=True)),
                ('alt_phone', models.CharField(blank=True, max_length=14, null=True)),
                ('cell_phone', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('alt_email', models.TextField(blank=True, null=True)),
                ('fax', models.CharField(blank=True, max_length=14, null=True)),
                ('site', models.TextField(blank=True, null=True)),
                ('building', models.TextField(blank=True, null=True)),
                ('room', models.TextField(blank=True, null=True)),
                ('biosketch', models.IntegerField(blank=True, null=True)),
                ('cv', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rsp_user_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspUserRole',
            fields=[
                ('user_role_id', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField()),
                ('rsp_role_id', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_user_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspWorksite',
            fields=[
                ('worksite_id', models.AutoField(primary_key=True, serialize=False)),
                ('building', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('org_id', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_worksite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RspWorksiteAffl',
            fields=[
                ('worksite_affl_id', models.AutoField(primary_key=True, serialize=False)),
                ('proj_id', models.IntegerField()),
                ('worksite_id', models.IntegerField()),
                ('primary', models.IntegerField()),
            ],
            options={
                'db_table': 'rsp_worksite_affl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SearchDataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', models.PositiveIntegerField()),
                ('type', models.CharField(blank=True, max_length=16, null=True)),
                ('data', models.TextField()),
                ('reindex', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'search_dataset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SearchIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=50)),
                ('sid', models.PositiveIntegerField()),
                ('type', models.CharField(blank=True, max_length=16, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'search_index',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SearchNodeLinks',
            fields=[
                ('sid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=16)),
                ('nid', models.PositiveIntegerField()),
                ('caption', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'search_node_links',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SearchTotal',
            fields=[
                ('word', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('count', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'search_total',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Semaphore',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255)),
                ('expire', models.FloatField()),
            ],
            options={
                'db_table': 'semaphore',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServicesProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_date', models.DateTimeField()),
                ('proj_first_name', models.CharField(max_length=100)),
                ('proj_id', models.IntegerField(blank=True, null=True)),
                ('proj_identifier', models.CharField(max_length=100)),
                ('proj_last_name', models.CharField(max_length=100)),
                ('proj_title', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'services_project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('uid', models.PositiveIntegerField()),
                ('sid', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('hostname', models.CharField(max_length=128)),
                ('timestamp', models.IntegerField()),
                ('cache', models.IntegerField()),
                ('session', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('filename', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('owner', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
                ('throttle', models.IntegerField()),
                ('bootstrap', models.IntegerField()),
                ('schema_version', models.SmallIntegerField()),
                ('weight', models.IntegerField()),
                ('info', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'system',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TermData',
            fields=[
                ('tid', models.AutoField(primary_key=True, serialize=False)),
                ('vid', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('weight', models.IntegerField()),
            ],
            options={
                'db_table': 'term_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TermHierarchy',
            fields=[
                ('tid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('parent', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'term_hierarchy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TermNode',
            fields=[
                ('nid', models.PositiveIntegerField()),
                ('vid', models.PositiveIntegerField()),
                ('tid', models.PositiveIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'term_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TermRelation',
            fields=[
                ('trid', models.AutoField(primary_key=True, serialize=False)),
                ('tid1', models.PositiveIntegerField()),
                ('tid2', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'term_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TermSynonym',
            fields=[
                ('tsid', models.AutoField(primary_key=True, serialize=False)),
                ('tid', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'term_synonym',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('fid', models.PositiveIntegerField()),
                ('nid', models.PositiveIntegerField()),
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('list', models.PositiveIntegerField()),
                ('weight', models.IntegerField()),
            ],
            options={
                'db_table': 'upload',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UrlAlias',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('src', models.CharField(max_length=128)),
                ('dst', models.CharField(max_length=128)),
                ('language', models.CharField(max_length=12)),
            ],
            options={
                'db_table': 'url_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserImport',
            fields=[
                ('import_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
                ('filename', models.CharField(max_length=50)),
                ('oldfilename', models.CharField(max_length=50)),
                ('filepath', models.TextField()),
                ('started', models.IntegerField()),
                ('pointer', models.IntegerField()),
                ('processed', models.IntegerField()),
                ('valid', models.IntegerField()),
                ('field_match', models.TextField()),
                ('roles', models.TextField()),
                ('options', models.TextField()),
                ('setting', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'user_import',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserImportErrors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_id', models.IntegerField()),
                ('data', models.TextField()),
                ('errors', models.TextField()),
            ],
            options={
                'db_table': 'user_import_errors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('mail', models.CharField(blank=True, max_length=64, null=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersRoles',
            fields=[
                ('uid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('rid', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'users_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('name', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'variable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewsDataExport',
            fields=[
                ('eid', models.AutoField(primary_key=True, serialize=False)),
                ('view_name', models.CharField(max_length=32)),
                ('view_display_id', models.CharField(max_length=32)),
                ('time_stamp', models.PositiveIntegerField()),
                ('fid', models.PositiveIntegerField()),
                ('batch_state', models.CharField(max_length=32)),
                ('sandbox', models.TextField()),
            ],
            options={
                'db_table': 'views_data_export',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewsDataExportObjectCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eid', models.CharField(blank=True, max_length=64, null=True)),
                ('updated', models.PositiveIntegerField()),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'views_data_export_object_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewsDisplay',
            fields=[
                ('vid', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('id', models.CharField(max_length=64)),
                ('display_title', models.CharField(max_length=64)),
                ('display_plugin', models.CharField(max_length=64)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('display_options', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'views_display',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewsObjectCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', models.CharField(blank=True, max_length=64, null=True)),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
                ('obj', models.CharField(blank=True, max_length=32, null=True)),
                ('updated', models.PositiveIntegerField()),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'views_object_cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewsView',
            fields=[
                ('vid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('base_table', models.CharField(max_length=64)),
                ('core', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'views_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VivoKeywordExclude',
            fields=[
                ('kid', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vivo_keyword_exclude',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VivoProfileMap',
            fields=[
                ('uid', models.IntegerField(primary_key=True, serialize=False)),
                ('snap_uid', models.IntegerField(blank=True, null=True)),
                ('accel_uid', models.IntegerField(blank=True, null=True)),
                ('vivo_include', models.IntegerField()),
            ],
            options={
                'db_table': 'vivo_profile_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vocabulary',
            fields=[
                ('vid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('help', models.CharField(max_length=255)),
                ('relations', models.PositiveIntegerField()),
                ('hierarchy', models.PositiveIntegerField()),
                ('multiple', models.PositiveIntegerField()),
                ('required', models.PositiveIntegerField()),
                ('tags', models.PositiveIntegerField()),
                ('module', models.CharField(max_length=255)),
                ('weight', models.IntegerField()),
            ],
            options={
                'db_table': 'vocabulary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VocabularyNodeTypes',
            fields=[
                ('vid', models.PositiveIntegerField()),
                ('type', models.CharField(max_length=32, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vocabulary_node_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Watchdog',
            fields=[
                ('wid', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField()),
                ('type', models.CharField(max_length=16)),
                ('message', models.TextField()),
                ('variables', models.TextField()),
                ('severity', models.PositiveIntegerField()),
                ('link', models.CharField(max_length=255)),
                ('location', models.TextField()),
                ('referer', models.TextField(blank=True, null=True)),
                ('hostname', models.CharField(max_length=128)),
                ('timestamp', models.IntegerField()),
            ],
            options={
                'db_table': 'watchdog',
                'managed': False,
            },
        ),
    ]
